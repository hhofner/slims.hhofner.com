---
import NewLayout from '@layouts/NewLayout.astro'
// import Layout from '@layouts/Layout.astro'
import Container from '@components/Container.astro'
import { SITE, HOME, SOCIALS } from '@consts'
import ArrowCard from '@components/ArrowCard.astro'
import Link from '@components/Link.astro'
import { getCollection } from 'astro:content'
import type { CollectionEntry } from 'astro:content'
import { fetchBooks, fetchPictures } from '@lib/utils'
import FormattedDate from '@components/FormattedDate.astro'
import DevlogList from '@components/DevlogList.astro'

const raw_blog = (await getCollection('blog')).filter((post) => !post.data.draft).sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())

const blog = raw_blog

// Group posts by year
const postsByYear = blog.reduce((acc, post) => {
  const year = post.data.date.getFullYear()
  if (!acc[year]) {
    acc[year] = []
  }
  acc[year].push(post)
  return acc
}, {} as Record<number, typeof blog>)

// Sort years in descending order
const sortedYears = Object.keys(postsByYear).map(Number).sort((a, b) => b - a)

// collect all tags in a set to remove duplicates
const raw_tags = new Set([
  ...raw_blog
    .flatMap((post) => post.data.tags)
    .filter((tag) => !!tag)
    .map((tag) => tag),
])

const tags = Array.from(raw_tags)

// const projects: CollectionEntry<'projects'>[] = (await getCollection('projects'))
//   .filter((project) => !project.data.draft)
//   .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
//   .slice(0, SITE.NUM_PROJECTS_ON_HOMEPAGE)

const devlogs = (await getCollection('devlog'))
  .filter((entry) => !entry.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, SITE.NUM_DEVLOGS_ON_HOMEPAGE)

//const books = await fetchBooks()
const pictures = await fetchPictures()
---

<NewLayout title={HOME.TITLE} description={HOME.DESCRIPTION}>
  <div class="px-8">
    <h2>Announcement: This blog is rebranding.</h2>
    <p class="mb-8">For the very few of you who follow this blog, I am changing some things. So please be excuse any horrible style issues.</p>

    {sortedYears.map(year => (
      <div class="mb-8">
        <h3 class="text-xl font-bold mb-4">{year}</h3>
        <ul class="space-y-2">
          {postsByYear[year].map(post => (
            <li>
              <a href={`/blog/${post.slug}`} class="hover:underline">
                {post.data.title}
              </a>
              <span class="ml-2 text-gray-600">
                ({post.data.date.getFullYear()}-{String(post.data.date.getMonth() + 1).padStart(2, '0')}-{String(post.data.date.getDate()).padStart(2, '0')})
              </span>
            </li>
          ))}
        </ul>
      </div>
    ))}
  </div>
</NewLayout>
