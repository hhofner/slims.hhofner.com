---
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import { SITE, HOME, SOCIALS } from "@consts";
import ArrowCard from "@components/ArrowCard.astro";
import Link from "@components/Link.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

const raw_blog = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

const blog = raw_blog.slice(0, SITE.NUM_POSTS_ON_HOMEPAGE);

// collect all tags in a set to remove duplicates
const raw_tags = new Set([
  ...raw_blog
    .flatMap((post) => post.data.tags)
    .filter((tag) => !!tag)
    .map((tag) => tag),
]);

const tags = Array.from(raw_tags);

const projects: CollectionEntry<"projects">[] = (
  await getCollection("projects")
)
  .filter((project) => !project.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, SITE.NUM_PROJECTS_ON_HOMEPAGE);
---

<Layout title={HOME.TITLE} description={HOME.DESCRIPTION}>
  <Container>
    <section class="animate mt-4 space-y-6">
      <div class="flex flex-wrap items-center justify-between gap-y-2">
        <h2 class="font-semibold text-black dark:text-white">Latest posts</h2>
        <Link href="/blog"> See all posts </Link>
      </div>
      <ul class="not-prose flex flex-col gap-4">
        {
          blog.map((post) => (
            <li>
              <ArrowCard entry={post} />
            </li>
          ))
        }
      </ul>
    </section>

    <!-- <section class="animate space-y-6">
          <div class="flex flex-wrap items-center justify-between gap-y-2">
            <h2 class="font-semibold text-black dark:text-white">
              Recent projects
            </h2>
            <Link href="/projects"> See all projects </Link>
          </div>
          <ul class="not-prose flex flex-col gap-4">
            {
              projects.map((project) => (
                <li>
                  <ArrowCard entry={project} />
                </li>
              ))
            }
          </ul>
        </section> -->

    <section class="animate mt-4 space-y-4">
      <h2 class="font-semibold text-black dark:text-white">Socials</h2>
      <article></article>
      <ul class="not-prose flex flex-wrap gap-2">
        {
          SOCIALS.map((SOCIAL) => (
            <li class="flex gap-x-2 text-nowrap">
              <Link
                href={SOCIAL.HREF}
                external
                aria-label={`${SITE.TITLE} on ${SOCIAL.NAME}`}
              >
                {SOCIAL.NAME}
              </Link>
              {"/"}
            </li>
          ))
        }
      </ul>
    </section>
    <section class="animate mt-4 space-y-4">
      <h2 class="font-semibold text-black dark:text-white">Tags</h2>
      <ul class="flex flex-wrap gap-2 text-left">
        <!-- { -->
        <!--   raw_blog -->
        <!--     .flatMap((post) => post.data.tags) -->
        <!--     .filter((tag) => !!tag) -->
        <!--     .map((tag) => ( -->
        <!--       <li class="flex gap-x-2 text-nowrap"> -->
        <!--         <Link -->
        <!--           href={`/tags/${tag?.toLowerCase()}`} -->
        <!--           aria-label={`Tag: ${tag}`} -->
        <!--         > -->
        <!--           #{tag} -->
        <!--         </Link> -->
        <!--       </li> -->
        <!--     )) -->
        <!-- } -->
        {
          tags.map((tag) => (
            <li class="flex gap-x-2 text-nowrap">
              <Link
                href={`/tags/${tag?.toLowerCase()}`}
                aria-label={`Tag: ${tag}`}
              >
                #{tag}
              </Link>
            </li>
          ))
        }
      </ul>
    </section>
  </Container>
</Layout>
