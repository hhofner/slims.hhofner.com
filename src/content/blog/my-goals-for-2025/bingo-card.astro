---
const tasks = {
  hardest: [
    "make good laugenwäckle",
    "20,000km swimming (total)",
    "1 successful freelance project",
    "¥xxxxxx savings goal",
    "learn to play **La Catedral**"
  ],
  hard: [
    "8 books",
    "90 day anki streak",
    "3 apps in production",
    "75kg bench press", 
    "make a game with löve"
  ],
  slightlyDifficult: [
    "50km running (total)",
    "finish 1 book in Japanese",
    "one screen-free day (from 9am to 9pm)",
    "finish Elixir exercism track",
    "春スキー@月山"
  ],
  medium: [
    "make tortillas",
    "太白山 ３回",
    "Finish three.js journey course",
    "finish Carcassi guitar book",
    "Go to one developer meetup"
  ],
  easy: [
    "go to Sendai tram museum",
    "地底の森ミュージアム行く",
    "Have a beer w/ someone I've never had a beer with",
    "write one short story"
  ]
};

// Seed random number generator with 2025-01-01
let seed = new Date('2025-01-01').getTime();
const random = () => {
    const x = Math.sin(seed++) * 10000;
    return x - Math.floor(x);
};

// Flatten and shuffle all tasks with their difficulty levels
const allTasks = [
  ...tasks.hardest.map(task => ({ task, difficulty: 'hardest' })),
  ...tasks.hard.map(task => ({ task, difficulty: 'hard' })),
  ...tasks.slightlyDifficult.map(task => ({ task, difficulty: 'slightlyDifficult' })),
  ...tasks.medium.map(task => ({ task, difficulty: 'medium' })),
  ...tasks.easy.map(task => ({ task, difficulty: 'easy' }))
];
for (let i = allTasks.length - 1; i > 0; i--) {
    const j = Math.floor(random() * (i + 1));
    [allTasks[i], allTasks[j]] = [allTasks[j], allTasks[i]];
}

// Insert FREE space in the middle (index 12)
allTasks.splice(12, 0, { task: "*FREE*", difficulty: 'free' });
---

<div class="flex justify-center py-8">
  <div class="w-full max-w-[800px] min-w-[280px] overflow-hidden bg-white dark:bg-gray-900 border-2 border-gray-200 dark:border-gray-700 rounded-lg">
    <div class="grid grid-cols-5 bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white font-bold text-2xl">
      <div class="p-2 text-center">H</div>
      <div class="p-2 text-center">A</div>
      <div class="p-2 text-center">P</div>
      <div class="p-2 text-center">P</div>
      <div class="p-2 text-center">Y</div>
    </div>
    <div class="grid grid-cols-5 gap-0.5 bg-gray-200 dark:bg-gray-700 p-0.5 w-full">
      {allTasks.map(({ task, difficulty }, i) => {
        const difficultyColors = {
          "hardest": 'bg-red-200 hover:bg-red-300 dark:bg-red-800/60 dark:hover:bg-red-700/60',
          "hard": 'bg-orange-200 hover:bg-orange-300 dark:bg-orange-800/60 dark:hover:bg-orange-700/60',
          "slightlyDifficult": 'bg-yellow-200 hover:bg-yellow-300 dark:bg-yellow-800/60 dark:hover:bg-yellow-700/60',
          "medium": 'bg-green-200 hover:bg-green-300 dark:bg-green-800/60 dark:hover:bg-green-700/60',
          "easy": 'bg-blue-200 hover:bg-blue-300 dark:bg-blue-800/60 dark:hover:bg-blue-700/60',
          "free": 'bg-yellow-300 hover:bg-yellow-400 dark:bg-yellow-700 dark:hover:bg-yellow-600 text-yellow-900 dark:text-yellow-200 font-bold'
        };

        return (
          <div 
            class={`
              aspect-square p-2 flex items-center justify-center text-center 
              text-[0.65rem] xs:text-xs sm:text-sm md:text-base text-gray-900 dark:text-white cursor-pointer transition-colors
              break-words
              ${difficultyColors[difficulty as "hardest" | "hard" | "slightlyDifficult" | "medium" | "easy" | "free"]}
            `} 
            data-cell={i}
          >
            {task}
          </div>
        );
      })}
    </div>
  </div>
</div>
