---
const tasks = {
  hardest: [
    "make good laugenwäckle",
    "20,000km swimming (total)",
    "1 successful freelance project",
    "100万円貯まる",
    "learn to play **La Catedral**"
  ],
  hard: [
    "8 books",
    "90 day anki streak",
    "3 apps in production",
    "75kg bench press", 
    "make a game with löve"
  ],
  slightlyDifficult: [
    "50km running (total)",
    "finish 1 book in Japanese",
    "one screen-free day (from 9am to 9pm)",
    "finish Elixir exercism track",
    "春スキー@月山"
  ],
  medium: [
    "make tortillas",
    "太白山 with baby ３回",
    "Finish three.js journey course",
    "finish Carcassi guitar book",
    "Go to one developer meetup"
  ],
  easy: [
    "go to Sendai tram museum",
    "地底の森ミュージアム行く",
    "Have a beer with someone I've never had a beer with",
    "write one short story"
  ]
};

// Seed random number generator with 2025-01-01
let seed = new Date('2025-01-01').getTime();
const random = () => {
    const x = Math.sin(seed++) * 10000;
    return x - Math.floor(x);
};

// Flatten and shuffle all tasks
const allTasks = [...tasks.hardest, ...tasks.hard, ...tasks.slightlyDifficult, ...tasks.medium, ...tasks.easy];
for (let i = allTasks.length - 1; i > 0; i--) {
    const j = Math.floor(random() * (i + 1));
    [allTasks[i], allTasks[j]] = [allTasks[j], allTasks[i]];
}

// Insert FREE space in the middle (index 12)
allTasks.splice(12, 0, "*FREE*");
---

<div class="flex justify-center py-8">
  <div class="w-full max-w-[800px] overflow-hidden bg-gray-900 border-2 border-gray-700 rounded-lg">
    <div class="grid grid-cols-5 bg-gray-800 text-white font-bold text-2xl">
      <div class="p-2 text-center">H</div>
      <div class="p-2 text-center">A</div>
      <div class="p-2 text-center">P</div>
      <div class="p-2 text-center">P</div>
      <div class="p-2 text-center">Y</div>
    </div>
    <div class="grid grid-cols-5 gap-0.5 bg-gray-700 p-0.5">
      {allTasks.map((task, i) => (
        <div 
          class={`
            aspect-square p-2 flex items-center justify-center text-center 
            text-sm sm:text-base text-white cursor-pointer transition-colors
            ${i === 12 
              ? 'bg-yellow-900 hover:bg-yellow-800 text-yellow-300 font-bold' 
              : 'bg-gray-800 hover:bg-gray-700'
            }
          `} 
          data-cell={i}
        >
          {task}
        </div>
      ))}
    </div>
  </div>
</div>
